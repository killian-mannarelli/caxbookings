# Generated by Django 4.0.4 on 2022-05-30 09:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColumnsPriv',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('column_name', models.CharField(db_column='Column_name', max_length=64)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('column_priv', models.CharField(db_collation='utf8_general_ci', db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'columns_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('component_id', models.AutoField(primary_key=True, serialize=False)),
                ('component_group_id', models.PositiveIntegerField()),
                ('component_urn', models.TextField()),
            ],
            options={
                'db_table': 'component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComputerInRoom',
            fields=[
                ('computer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('computer_name', models.CharField(blank=True, default='New PC', max_length=255)),
                ('room_id', models.IntegerField()),
                ('computer_status', models.IntegerField()),
                ('next_booking_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computer_in_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Db',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('select_priv', models.CharField(db_collation='utf8_general_ci', db_column='Select_priv', max_length=1)),
                ('insert_priv', models.CharField(db_collation='utf8_general_ci', db_column='Insert_priv', max_length=1)),
                ('update_priv', models.CharField(db_collation='utf8_general_ci', db_column='Update_priv', max_length=1)),
                ('delete_priv', models.CharField(db_collation='utf8_general_ci', db_column='Delete_priv', max_length=1)),
                ('create_priv', models.CharField(db_collation='utf8_general_ci', db_column='Create_priv', max_length=1)),
                ('drop_priv', models.CharField(db_collation='utf8_general_ci', db_column='Drop_priv', max_length=1)),
                ('grant_priv', models.CharField(db_collation='utf8_general_ci', db_column='Grant_priv', max_length=1)),
                ('references_priv', models.CharField(db_collation='utf8_general_ci', db_column='References_priv', max_length=1)),
                ('index_priv', models.CharField(db_collation='utf8_general_ci', db_column='Index_priv', max_length=1)),
                ('alter_priv', models.CharField(db_collation='utf8_general_ci', db_column='Alter_priv', max_length=1)),
                ('create_tmp_table_priv', models.CharField(db_collation='utf8_general_ci', db_column='Create_tmp_table_priv', max_length=1)),
                ('lock_tables_priv', models.CharField(db_collation='utf8_general_ci', db_column='Lock_tables_priv', max_length=1)),
                ('create_view_priv', models.CharField(db_collation='utf8_general_ci', db_column='Create_view_priv', max_length=1)),
                ('show_view_priv', models.CharField(db_collation='utf8_general_ci', db_column='Show_view_priv', max_length=1)),
                ('create_routine_priv', models.CharField(db_collation='utf8_general_ci', db_column='Create_routine_priv', max_length=1)),
                ('alter_routine_priv', models.CharField(db_collation='utf8_general_ci', db_column='Alter_routine_priv', max_length=1)),
                ('execute_priv', models.CharField(db_collation='utf8_general_ci', db_column='Execute_priv', max_length=1)),
                ('event_priv', models.CharField(db_collation='utf8_general_ci', db_column='Event_priv', max_length=1)),
                ('trigger_priv', models.CharField(db_collation='utf8_general_ci', db_column='Trigger_priv', max_length=1)),
            ],
            options={
                'db_table': 'db',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefaultRoles',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='HOST', max_length=255, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='USER', max_length=32)),
                ('default_role_host', models.CharField(db_collation='ascii_general_ci', db_column='DEFAULT_ROLE_HOST', max_length=255)),
                ('default_role_user', models.CharField(db_column='DEFAULT_ROLE_USER', max_length=32)),
            ],
            options={
                'db_table': 'default_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineCost',
            fields=[
                ('engine_name', models.CharField(max_length=64)),
                ('device_type', models.IntegerField()),
                ('cost_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('cost_value', models.FloatField(blank=True, null=True)),
                ('last_update', models.DateTimeField()),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('default_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engine_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentInRoom',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'rel_table_equipment_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Func',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('ret', models.IntegerField()),
                ('dl', models.CharField(max_length=128)),
                ('type', models.CharField(db_collation='utf8_general_ci', max_length=9)),
            ],
            options={
                'db_table': 'func',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('thread_id', models.PositiveBigIntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('command_type', models.CharField(max_length=64)),
                ('argument', models.TextField()),
            ],
            options={
                'db_table': 'general_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalGrants',
            fields=[
                ('user', models.CharField(db_column='USER', max_length=32, primary_key=True, serialize=False)),
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='HOST', max_length=255)),
                ('priv', models.CharField(db_collation='utf8_general_ci', db_column='PRIV', max_length=32)),
                ('with_grant_option', models.CharField(db_collation='utf8_general_ci', db_column='WITH_GRANT_OPTION', max_length=1)),
            ],
            options={
                'db_table': 'global_grants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalVariables',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'global_variables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GtidExecuted',
            fields=[
                ('source_uuid', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('interval_start', models.BigIntegerField()),
                ('interval_end', models.BigIntegerField()),
            ],
            options={
                'db_table': 'gtid_executed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpCategory',
            fields=[
                ('help_category_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('parent_category_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpKeyword',
            fields=[
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'help_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpRelation',
            fields=[
                ('help_topic_id', models.PositiveIntegerField()),
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'help_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpTopic',
            fields=[
                ('help_topic_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('help_category_id', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('example', models.TextField()),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbIndexStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('index_name', models.CharField(max_length=64)),
                ('last_update', models.DateTimeField()),
                ('stat_name', models.CharField(max_length=64)),
                ('stat_value', models.PositiveBigIntegerField()),
                ('sample_size', models.PositiveBigIntegerField(blank=True, null=True)),
                ('stat_description', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'innodb_index_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbTableStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('last_update', models.DateTimeField()),
                ('n_rows', models.PositiveBigIntegerField()),
                ('clustered_index_size', models.PositiveBigIntegerField()),
                ('sum_of_other_index_sizes', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'innodb_table_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('password_timestamp', models.DateTimeField(db_column='Password_timestamp')),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
            ],
            options={
                'db_table': 'password_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('dl', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'plugin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcsPriv',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('routine_name', models.CharField(db_collation='utf8_general_ci', db_column='Routine_name', max_length=64)),
                ('routine_type', models.CharField(db_column='Routine_type', max_length=9)),
                ('grantor', models.CharField(db_column='Grantor', max_length=288)),
                ('proc_priv', models.CharField(db_collation='utf8_general_ci', db_column='Proc_priv', max_length=27)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'procs_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProxiesPriv',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('proxied_host', models.CharField(db_collation='ascii_general_ci', db_column='Proxied_host', max_length=255)),
                ('proxied_user', models.CharField(db_column='Proxied_user', max_length=32)),
                ('with_grant', models.IntegerField(db_column='With_grant')),
                ('grantor', models.CharField(db_column='Grantor', max_length=288)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'proxies_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplicationAsynchronousConnectionFailover',
            fields=[
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255)),
                ('port', models.PositiveIntegerField(db_column='Port')),
                ('network_namespace', models.CharField(db_column='Network_namespace', max_length=64)),
                ('weight', models.PositiveIntegerField(db_column='Weight')),
                ('managed_name', models.CharField(db_column='Managed_name', max_length=64)),
            ],
            options={
                'db_table': 'replication_asynchronous_connection_failover',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplicationAsynchronousConnectionFailoverManaged',
            fields=[
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
                ('managed_name', models.CharField(db_column='Managed_name', max_length=64)),
                ('managed_type', models.CharField(db_column='Managed_type', max_length=64)),
                ('configuration', models.JSONField(blank=True, db_column='Configuration', null=True)),
            ],
            options={
                'db_table': 'replication_asynchronous_connection_failover_managed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplicationGroupConfigurationVersion',
            fields=[
                ('name', models.CharField(db_collation='ascii_general_ci', max_length=255, primary_key=True, serialize=False)),
                ('version', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'replication_group_configuration_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplicationGroupMemberActions',
            fields=[
                ('name', models.CharField(db_collation='ascii_general_ci', max_length=255, primary_key=True, serialize=False)),
                ('event', models.CharField(db_collation='ascii_general_ci', max_length=64)),
                ('enabled', models.IntegerField()),
                ('type', models.CharField(db_collation='ascii_general_ci', max_length=64)),
                ('priority', models.PositiveIntegerField()),
                ('error_handling', models.CharField(db_collation='ascii_general_ci', max_length=64)),
            ],
            options={
                'db_table': 'replication_group_member_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleEdges',
            fields=[
                ('from_host', models.CharField(db_collation='ascii_general_ci', db_column='FROM_HOST', max_length=255, primary_key=True, serialize=False)),
                ('from_user', models.CharField(db_column='FROM_USER', max_length=32)),
                ('to_host', models.CharField(db_collation='ascii_general_ci', db_column='TO_HOST', max_length=255)),
                ('to_user', models.CharField(db_column='TO_USER', max_length=32)),
                ('with_admin_option', models.CharField(db_collation='utf8_general_ci', db_column='WITH_ADMIN_OPTION', max_length=1)),
            ],
            options={
                'db_table': 'role_edges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomBooked',
            fields=[
                ('room_id', models.IntegerField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(blank=True, max_length=255, null=True)),
                ('room_booking_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'room_booked',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomEquipment',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('equipment_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'room_equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='Ney Room', max_length=255)),
            ],
            options={
                'db_table': 'rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomSearch',
            fields=[
                ('room_id', models.IntegerField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(blank=True, max_length=255, null=True)),
                ('room_capacity', models.IntegerField(blank=True, null=True)),
                ('room_current_capacity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'room_search',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomWithEquipmentName',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('room_id', models.IntegerField()),
                ('equipment_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'room_with_equipment_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServerCost',
            fields=[
                ('cost_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('cost_value', models.FloatField(blank=True, null=True)),
                ('last_update', models.DateTimeField()),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('default_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('server_name', models.CharField(db_column='Server_name', max_length=64, primary_key=True, serialize=False)),
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('username', models.CharField(db_column='Username', max_length=64)),
                ('password', models.CharField(db_column='Password', max_length=64)),
                ('port', models.IntegerField(db_column='Port')),
                ('socket', models.CharField(db_column='Socket', max_length=64)),
                ('wrapper', models.CharField(db_column='Wrapper', max_length=64)),
                ('owner', models.CharField(db_column='Owner', max_length=64)),
            ],
            options={
                'db_table': 'servers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveMasterInfo',
            fields=[
                ('number_of_lines', models.PositiveIntegerField(db_column='Number_of_lines')),
                ('master_log_name', models.TextField(db_collation='utf8_bin', db_column='Master_log_name')),
                ('master_log_pos', models.PositiveBigIntegerField(db_column='Master_log_pos')),
                ('host', models.CharField(blank=True, db_collation='ascii_general_ci', db_column='Host', max_length=255, null=True)),
                ('user_name', models.TextField(blank=True, db_collation='utf8_bin', db_column='User_name', null=True)),
                ('user_password', models.TextField(blank=True, db_collation='utf8_bin', db_column='User_password', null=True)),
                ('port', models.PositiveIntegerField(db_column='Port')),
                ('connect_retry', models.PositiveIntegerField(db_column='Connect_retry')),
                ('enabled_ssl', models.IntegerField(db_column='Enabled_ssl')),
                ('ssl_ca', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_ca', null=True)),
                ('ssl_capath', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_capath', null=True)),
                ('ssl_cert', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_cert', null=True)),
                ('ssl_cipher', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_cipher', null=True)),
                ('ssl_key', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_key', null=True)),
                ('ssl_verify_server_cert', models.IntegerField(db_column='Ssl_verify_server_cert')),
                ('heartbeat', models.FloatField(db_column='Heartbeat')),
                ('bind', models.TextField(blank=True, db_collation='utf8_bin', db_column='Bind', null=True)),
                ('ignored_server_ids', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ignored_server_ids', null=True)),
                ('uuid', models.TextField(blank=True, db_collation='utf8_bin', db_column='Uuid', null=True)),
                ('retry_count', models.PositiveBigIntegerField(db_column='Retry_count')),
                ('ssl_crl', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_crl', null=True)),
                ('ssl_crlpath', models.TextField(blank=True, db_collation='utf8_bin', db_column='Ssl_crlpath', null=True)),
                ('enabled_auto_position', models.IntegerField(db_column='Enabled_auto_position')),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
                ('tls_version', models.TextField(blank=True, db_collation='utf8_bin', db_column='Tls_version', null=True)),
                ('public_key_path', models.TextField(blank=True, db_collation='utf8_bin', db_column='Public_key_path', null=True)),
                ('get_public_key', models.IntegerField(db_column='Get_public_key')),
                ('network_namespace', models.TextField(blank=True, db_collation='utf8_bin', db_column='Network_namespace', null=True)),
                ('master_compression_algorithm', models.CharField(db_collation='utf8_bin', db_column='Master_compression_algorithm', max_length=64)),
                ('master_zstd_compression_level', models.PositiveIntegerField(db_column='Master_zstd_compression_level')),
                ('tls_ciphersuites', models.TextField(blank=True, db_collation='utf8_bin', db_column='Tls_ciphersuites', null=True)),
                ('source_connection_auto_failover', models.IntegerField(db_column='Source_connection_auto_failover')),
                ('gtid_only', models.IntegerField(db_column='Gtid_only')),
            ],
            options={
                'db_table': 'slave_master_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveRelayLogInfo',
            fields=[
                ('number_of_lines', models.PositiveIntegerField(db_column='Number_of_lines')),
                ('relay_log_name', models.TextField(blank=True, db_collation='utf8_bin', db_column='Relay_log_name', null=True)),
                ('relay_log_pos', models.PositiveBigIntegerField(blank=True, db_column='Relay_log_pos', null=True)),
                ('master_log_name', models.TextField(blank=True, db_collation='utf8_bin', db_column='Master_log_name', null=True)),
                ('master_log_pos', models.PositiveBigIntegerField(blank=True, db_column='Master_log_pos', null=True)),
                ('sql_delay', models.IntegerField(blank=True, db_column='Sql_delay', null=True)),
                ('number_of_workers', models.PositiveIntegerField(blank=True, db_column='Number_of_workers', null=True)),
                ('id', models.PositiveIntegerField(blank=True, db_column='Id', null=True)),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
                ('privilege_checks_username', models.CharField(blank=True, db_collation='utf8_bin', db_column='Privilege_checks_username', max_length=32, null=True)),
                ('privilege_checks_hostname', models.CharField(blank=True, db_collation='ascii_general_ci', db_column='Privilege_checks_hostname', max_length=255, null=True)),
                ('require_row_format', models.IntegerField(db_column='Require_row_format')),
                ('require_table_primary_key_check', models.CharField(db_column='Require_table_primary_key_check', max_length=6)),
                ('assign_gtids_to_anonymous_transactions_type', models.CharField(db_column='Assign_gtids_to_anonymous_transactions_type', max_length=5)),
                ('assign_gtids_to_anonymous_transactions_value', models.TextField(blank=True, db_collation='utf8_bin', db_column='Assign_gtids_to_anonymous_transactions_value', null=True)),
            ],
            options={
                'db_table': 'slave_relay_log_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveWorkerInfo',
            fields=[
                ('id', models.PositiveIntegerField(db_column='Id')),
                ('relay_log_name', models.TextField(db_collation='utf8_bin', db_column='Relay_log_name')),
                ('relay_log_pos', models.PositiveBigIntegerField(db_column='Relay_log_pos')),
                ('master_log_name', models.TextField(db_collation='utf8_bin', db_column='Master_log_name')),
                ('master_log_pos', models.PositiveBigIntegerField(db_column='Master_log_pos')),
                ('checkpoint_relay_log_name', models.TextField(db_collation='utf8_bin', db_column='Checkpoint_relay_log_name')),
                ('checkpoint_relay_log_pos', models.PositiveBigIntegerField(db_column='Checkpoint_relay_log_pos')),
                ('checkpoint_master_log_name', models.TextField(db_collation='utf8_bin', db_column='Checkpoint_master_log_name')),
                ('checkpoint_master_log_pos', models.PositiveBigIntegerField(db_column='Checkpoint_master_log_pos')),
                ('checkpoint_seqno', models.PositiveIntegerField(db_column='Checkpoint_seqno')),
                ('checkpoint_group_size', models.PositiveIntegerField(db_column='Checkpoint_group_size')),
                ('checkpoint_group_bitmap', models.TextField(db_column='Checkpoint_group_bitmap')),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'slave_worker_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('query_time', models.TimeField()),
                ('lock_time', models.TimeField()),
                ('rows_sent', models.IntegerField()),
                ('rows_examined', models.IntegerField()),
                ('db', models.CharField(max_length=512)),
                ('last_insert_id', models.IntegerField()),
                ('insert_id', models.IntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('sql_text', models.TextField()),
                ('thread_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'slow_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablesPriv',
            fields=[
                ('host', models.CharField(db_collation='ascii_general_ci', db_column='Host', max_length=255, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('grantor', models.CharField(db_column='Grantor', max_length=288)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('table_priv', models.CharField(db_collation='utf8_general_ci', db_column='Table_priv', max_length=98)),
                ('column_priv', models.CharField(db_collation='utf8_general_ci', db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'tables_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('time_zone_id', models.AutoField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('use_leap_seconds', models.CharField(db_column='Use_leap_seconds', max_length=1)),
            ],
            options={
                'db_table': 'time_zone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneLeapSecond',
            fields=[
                ('transition_time', models.BigIntegerField(db_column='Transition_time', primary_key=True, serialize=False)),
                ('correction', models.IntegerField(db_column='Correction')),
            ],
            options={
                'db_table': 'time_zone_leap_second',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneName',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=64, primary_key=True, serialize=False)),
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id')),
            ],
            options={
                'db_table': 'time_zone_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransition',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_time', models.BigIntegerField(db_column='Transition_time')),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
            ],
            options={
                'db_table': 'time_zone_transition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransitionType',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
                ('offset', models.IntegerField(db_column='Offset')),
                ('is_dst', models.PositiveIntegerField(db_column='Is_DST')),
                ('abbreviation', models.CharField(db_column='Abbreviation', max_length=8)),
            ],
            options={
                'db_table': 'time_zone_transition_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfos',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('is_superuser', models.BooleanField(blank=True, null=True)),
                ('is_staff', models.BooleanField(blank=True, null=True)),
                ('nb_in_process_bookings', models.IntegerField(blank=True, null=True)),
                ('nb_total_bookings', models.IntegerField(blank=True, null=True)),
                ('nb_passed_bookings', models.IntegerField(blank=True, null=True)),
                ('nb_canceled_bookings', models.IntegerField(blank=True, null=True)),
                ('avg_booking_time', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_info',
                'managed': False,
            },
        ),
    ]
